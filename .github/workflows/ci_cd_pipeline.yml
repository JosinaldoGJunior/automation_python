name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      BASE_URL: ${{ secrets.BASE_URL }}
      API_LOGIN_URL: ${{ secrets.API_LOGIN_URL }}
      API_EMAIL: ${{ secrets.API_EMAIL }}
      API_PASSWORD: ${{ secrets.API_PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          pytest --maxfail=3 --disable-warnings --alluredir=allure-results
          # Verificar se o diretório allure-results foi criado
          ls -R allure-results

      - name: Generate Allure Report
        if: always()
        run: |
          # Verificar se o diretório allure-results contém arquivos
          if [ -d allure-results ]; then
            echo "Gerando o relatório Allure..."
            allure generate allure-results --clean -o allure-report
          else
            echo "O diretório allure-results não foi encontrado! Verifique os testes."
            exit 1
          fi

      - name: Copy Allure Report to gh-pages branch
        if: always()
        run: |
          # Verifica se o diretório allure-report foi criado
          if [ -d allure-report ]; then
            echo "Relatório Allure gerado com sucesso!"
            git checkout gh-pages
            cp -r allure-report/* .
            git add .
            git commit -m "Update Allure report"
            git push origin gh-pages
          else
            echo "Não foi possível gerar o relatório Allure!"
            exit 1
