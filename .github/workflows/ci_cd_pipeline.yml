name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      BASE_URL: ${{ secrets.BASE_URL }}
      API_LOGIN_URL: ${{ secrets.API_LOGIN_URL }}
      API_EMAIL: ${{ secrets.API_EMAIL }}
      API_PASSWORD: ${{ secrets.API_PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Verificar variável BASE_URL
        run: |
          if [ -z "$BASE_URL" ]; then
            echo "❌ Erro: BASE_URL não está definida!"
            exit 1
          else
            echo "✅ BASE_URL encontrada!"
          fi

      - name: Verificar localização do pytest.ini
        run: |
          if [ -f pytest.ini ]; then
            echo "✅ pytest.ini encontrado na raiz do projeto!"
          else
            echo "❌ pytest.ini NÃO foi encontrado na raiz do projeto!"
            exit 1
          fi

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install allure-pytest  # Instala o plugin do Allure para pytest

      - name: Install Allure CLI
        run: |
          curl -o allure-commandline.zip -L https://github.com/allure-framework/allure2/releases/download/2.18.1/allure-2.18.1.zip
          unzip allure-commandline.zip -d /opt/allure
          ln -s /opt/allure/allure-2.18.1/bin/allure /usr/local/bin/allure
          allure --version  # Verifica se o Allure foi instalado corretamente

      - name: Run tests
        run: |
          pytest --maxfail=3 --disable-warnings
          if [ -d allure-results ] && [ "$(ls -A allure-results)" ]; then
            echo "✅ Resultados dos testes gerados com sucesso!"
          else
            echo "❌ Erro: allure-results está vazio ou não foi criado!"
            exit 1
          fi

      - name: Generate Allure Report
        if: always()
        run: |
          if [ -d allure-results ] && [ "$(ls -A allure-results)" ]; then
            echo "Gerando o relatório Allure..."
            allure generate allure-results --clean -o allure-report
            if [ -d allure-report ] && [ "$(ls -A allure-report)" ]; then
              echo "✅ Relatório Allure gerado com sucesso!"
            else
              echo "❌ Erro: allure-report não foi criado ou está vazio!"
              exit 1
            fi
          else
            echo "❌ Erro: allure-results está vazio ou não foi criado!"
            exit 1
          fi

      - name: Configurar Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Publicar relatório no GitHub Pages
        if: always()
        run: |
          git checkout gh-pages 2>/dev/null || git checkout --orphan gh-pages
          find . -not -name '.gitignore' -exec rm -rf {} +
          cp -r allure-report/* .
          git add .
          git commit -m "Update Allure Report"
          git push origin gh-pages --force
