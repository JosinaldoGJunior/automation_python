{"uid":"c9e2a160eb4346a0","name":"test_balance","fullName":"tests.account.test_account.TestAccount#test_balance","historyId":"c2317057afff806776b8c4dd07a4f5b8","time":{"start":1742622932549,"stop":1742622932868,"duration":319},"status":"failed","statusMessage":"AssertionError: Expected <-114.26> to be equal to <580.79>, but was not.","statusTrace":"self = <tests.account.test_account.TestAccount object at 0x7fa1cb228da0>\nheaders = {'Authorization': 'JWT eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6NTk1OTB9.EW89xcPCTvQiaDx62FO-XM_gOanSRc1icj8EPRtUQu4'}\naccount_payload = {'nome': 'Conta41795'}\ntransaction_payload = {'conta_id': 2429942, 'data_pagamento': '26/03/2025', 'data_transacao': '21/03/2025', 'descricao': 'Descricao_47f1c', ...}\n\n    def test_balance(self,headers,account_payload,transaction_payload):\n    \n        response_create_account = self.post(\"contas\", json=account_payload, headers=headers)\n        self.check_status_code(response_create_account, 201)\n        account_id = response_create_account.json().get(\"id\")\n        transaction_payload[\"conta_id\"] = account_id\n    \n        response_create_transaction = self.post(\"transacoes\", json=transaction_payload, headers=headers)\n        self.check_status_code(response_create_transaction, 201)\n    \n        response_banlace = self.get(\"saldo\", headers=headers)\n        self.check_status_code(response_banlace, 200)\n    \n>       assert_that(response_banlace.json()[0].get(\"saldo\")).is_equal_to(str(transaction_payload[\"valor\"]))\nE       AssertionError: Expected <-114.26> to be equal to <580.79>, but was not.\n\ntests/account/test_account.py:71: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"load_env_variables","time":{"start":1742622931244,"stop":1742622931245,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"headers","time":{"start":1742622931245,"stop":1742622931503,"duration":258},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"transaction_payload","time":{"start":1742622932549,"stop":1742622932549,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"account_payload","time":{"start":1742622932549,"stop":1742622932549,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Expected <-114.26> to be equal to <580.79>, but was not.","statusTrace":"self = <tests.account.test_account.TestAccount object at 0x7fa1cb228da0>\nheaders = {'Authorization': 'JWT eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6NTk1OTB9.EW89xcPCTvQiaDx62FO-XM_gOanSRc1icj8EPRtUQu4'}\naccount_payload = {'nome': 'Conta41795'}\ntransaction_payload = {'conta_id': 2429942, 'data_pagamento': '26/03/2025', 'data_transacao': '21/03/2025', 'descricao': 'Descricao_47f1c', ...}\n\n    def test_balance(self,headers,account_payload,transaction_payload):\n    \n        response_create_account = self.post(\"contas\", json=account_payload, headers=headers)\n        self.check_status_code(response_create_account, 201)\n        account_id = response_create_account.json().get(\"id\")\n        transaction_payload[\"conta_id\"] = account_id\n    \n        response_create_transaction = self.post(\"transacoes\", json=transaction_payload, headers=headers)\n        self.check_status_code(response_create_transaction, 201)\n    \n        response_banlace = self.get(\"saldo\", headers=headers)\n        self.check_status_code(response_banlace, 200)\n    \n>       assert_that(response_banlace.json()[0].get(\"saldo\")).is_equal_to(str(transaction_payload[\"valor\"]))\nE       AssertionError: Expected <-114.26> to be equal to <580.79>, but was not.\n\ntests/account/test_account.py:71: AssertionError","steps":[],"attachments":[{"uid":"4b814649b9808554","name":"log","source":"4b814649b9808554.txt","type":"text/plain","size":9819},{"uid":"8f25efc1a0c4ab47","name":"stderr","source":"8f25efc1a0c4ab47.txt","type":"text/plain","size":9724}],"parameters":[],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"tag","value":"contas"},{"name":"parentSuite","value":"tests.account"},{"name":"suite","value":"test_account"},{"name":"subSuite","value":"TestAccount"},{"name":"host","value":"fv-az1931-738"},{"name":"thread","value":"2043-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.account.test_account"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":1,"passed":0,"unknown":0,"total":3},"items":[{"uid":"243d7339924a6fd","status":"failed","statusDetails":"AssertionError: Expected <-978.97> to be equal to <183.32>, but was not.","time":{"start":1742620485983,"stop":1742620486218,"duration":235}},{"uid":"f1ca795a608adc25","status":"skipped","statusDetails":"Skipped: error","time":{"start":1742619852845,"stop":1742619852845,"duration":0}}]},"tags":["contas"]},"source":"c9e2a160eb4346a0.json","parameterValues":[]}