{"uid":"243d7339924a6fd","name":"test_balance","fullName":"tests.account.test_account.TestAccount#test_balance","historyId":"c2317057afff806776b8c4dd07a4f5b8","time":{"start":1742620485983,"stop":1742620486218,"duration":235},"status":"failed","statusMessage":"AssertionError: Expected <-978.97> to be equal to <183.32>, but was not.","statusTrace":"self = <tests.account.test_account.TestAccount object at 0x7f0f6c576de0>\nheaders = {'Authorization': 'JWT eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6NTk1OTB9.EW89xcPCTvQiaDx62FO-XM_gOanSRc1icj8EPRtUQu4'}\naccount_payload = {'nome': 'Conta0cc10'}\ntransaction_payload = {'conta_id': 2429924, 'data_pagamento': '26/03/2025', 'data_transacao': '21/03/2025', 'descricao': 'Descricao_8ae4d', ...}\n\n    def test_balance(self,headers,account_payload,transaction_payload):\n    \n        response_create_account = self.post(\"contas\", json=account_payload, headers=headers)\n        self.check_status_code(response_create_account, 201)\n        account_id = response_create_account.json().get(\"id\")\n        transaction_payload[\"conta_id\"] = account_id\n    \n        response_create_transaction = self.post(\"transacoes\", json=transaction_payload, headers=headers)\n        self.check_status_code(response_create_transaction, 201)\n    \n        response_banlace = self.get(\"saldo\", headers=headers)\n        self.check_status_code(response_banlace, 200)\n    \n>       assert_that(response_banlace.json()[-1].get(\"saldo\")).is_equal_to(str(transaction_payload[\"valor\"]))\nE       AssertionError: Expected <-978.97> to be equal to <183.32>, but was not.\n\ntests/account/test_account.py:71: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"load_env_variables","time":{"start":1742620484804,"stop":1742620484804,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"headers","time":{"start":1742620484804,"stop":1742620485064,"duration":260},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"account_payload","time":{"start":1742620485983,"stop":1742620485983,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"transaction_payload","time":{"start":1742620485983,"stop":1742620485983,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Expected <-978.97> to be equal to <183.32>, but was not.","statusTrace":"self = <tests.account.test_account.TestAccount object at 0x7f0f6c576de0>\nheaders = {'Authorization': 'JWT eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6NTk1OTB9.EW89xcPCTvQiaDx62FO-XM_gOanSRc1icj8EPRtUQu4'}\naccount_payload = {'nome': 'Conta0cc10'}\ntransaction_payload = {'conta_id': 2429924, 'data_pagamento': '26/03/2025', 'data_transacao': '21/03/2025', 'descricao': 'Descricao_8ae4d', ...}\n\n    def test_balance(self,headers,account_payload,transaction_payload):\n    \n        response_create_account = self.post(\"contas\", json=account_payload, headers=headers)\n        self.check_status_code(response_create_account, 201)\n        account_id = response_create_account.json().get(\"id\")\n        transaction_payload[\"conta_id\"] = account_id\n    \n        response_create_transaction = self.post(\"transacoes\", json=transaction_payload, headers=headers)\n        self.check_status_code(response_create_transaction, 201)\n    \n        response_banlace = self.get(\"saldo\", headers=headers)\n        self.check_status_code(response_banlace, 200)\n    \n>       assert_that(response_banlace.json()[-1].get(\"saldo\")).is_equal_to(str(transaction_payload[\"valor\"]))\nE       AssertionError: Expected <-978.97> to be equal to <183.32>, but was not.\n\ntests/account/test_account.py:71: AssertionError","steps":[],"attachments":[{"uid":"ec35d13e2ab0d528","name":"log","source":"ec35d13e2ab0d528.txt","type":"text/plain","size":9459},{"uid":"c6f62a3c31bb4680","name":"stderr","source":"c6f62a3c31bb4680.txt","type":"text/plain","size":9364}],"parameters":[],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"tag","value":"contas"},{"name":"parentSuite","value":"tests.account"},{"name":"suite","value":"test_account"},{"name":"subSuite","value":"TestAccount"},{"name":"host","value":"fv-az1074-614"},{"name":"thread","value":"1989-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.account.test_account"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":1,"passed":0,"unknown":0,"total":2},"items":[{"uid":"f1ca795a608adc25","status":"skipped","statusDetails":"Skipped: error","time":{"start":1742619852845,"stop":1742619852845,"duration":0}}]},"tags":["contas"]},"source":"243d7339924a6fd.json","parameterValues":[]}